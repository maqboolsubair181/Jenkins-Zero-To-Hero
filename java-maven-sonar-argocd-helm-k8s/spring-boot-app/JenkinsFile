pipeline {
  agent {
    docker {
      image 'maqboolsubair181/maven-docker-agent:v1'
      args "--user root -v /var/run/docker.sock:/var/run/docker.sock"
    }
  }

  stages {

    stage('Checkout') {
      steps {
        // This checks out the code (including .git) directly into the workspace
        checkout([$class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[url: 'https://github.com/maqboolsubair181/Jenkins-Zero-To-Hero.git']]
        ])
        sh 'echo "âœ… Code checked out successfully into `pwd`"'
        sh 'ls -la' // Let's see the .git directory right after checkout
      }
    }

    stage('Build and Test') {
      steps {
        // CORRECT WAY: Use the 'dir' step to execute commands in a subdirectory
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package -Dmaven.test.skip=true'
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.153.141.9:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          // Use 'dir' here as well for clean context management
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "maqboolsubair181/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          // Use 'dir' to set the build context for Docker
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            docker.build("${DOCKER_IMAGE}", '.')
          }
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            docker.image("${DOCKER_IMAGE}").push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "maqboolsubair181"
      }
      steps {
        // Because previous stages used 'dir', this stage is GUARANTEED
        // to start in the main workspace, where the .git directory is.
        sh 'echo "--- Running git commands in `pwd` ---"'
        sh 'ls -la' // You will see the .git folder listed here now
        
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "maqboolsubair181@gmail.com"
            git config user.name "maqboolsubair181"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
